@{
    Layout = "~/Views/Shared/_Layout_User.cshtml";
}

@model PhotoCritic.Models.OpinionatedIndividualPhoto

@{
    ViewBag.Title = "Create";
}

<h2>My Vote</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.PhotoId)
    @Html.HiddenFor(model => model.LikeDislike)
    @Html.HiddenFor(model => model.Id)

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @{ if (ViewBag.CategoryOfPhotoForReasons == "1")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Reason1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Reason1, new SelectList(new[] { null, "Not original", "Too busy", "Colors clash", "Low quality image" }, Model.Reason1))
                        @Html.ValidationMessageFor(model => model.Reason1, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Reason2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Reason2, new SelectList(new[] { null, "Not original", "Too busy", "Colors clash", "Low quality image" }, Model.Reason2))
                            @Html.ValidationMessageFor(model => model.Reason2, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
            }
            else if (ViewBag.CategoryOfPhotoForReasons == "2")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Reason1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Reason1, new SelectList(new[] { null, "Distracting background", "Looks unappetizing", "Low quality image" }, Model.Reason1))
                        @Html.ValidationMessageFor(model => model.Reason1, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Reason2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Reason2, new SelectList(new[] { null, "Distracting background", "Looks unappetizing", "Low quality image" }, Model.Reason2))
                            @Html.ValidationMessageFor(model => model.Reason2, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
            }
            else if (ViewBag.CategoryOfPhotoForReasons == "3")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Reason1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Reason1, new SelectList(new[] { null, "Photo is not framed nicely", "Person is unattractive", "Low quality image" }, Model.Reason1))
                        @Html.ValidationMessageFor(model => model.Reason1, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Reason2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Reason2, new SelectList(new[] { null, "Photo is not framed nicely", "Person is unattractive", "Low quality image" }, Model.Reason2))
                            @Html.ValidationMessageFor(model => model.Reason2, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
            }
            else if (ViewBag.CategoryOfPhotoForReasons == "4")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Reason1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Reason1, new SelectList(new[] { null, "Not a place I'd want to visit", "Bad lighting", "Low quality image" }, Model.Reason1))
                        @Html.ValidationMessageFor(model => model.Reason1, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Reason2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Reason2, new SelectList(new[] { null, "Not a place I'd want to visit", "Bad lighting", "Low quality image" }, Model.Reason2))
                            @Html.ValidationMessageFor(model => model.Reason2, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
            }
            else if (ViewBag.CategoryOfPhotoForReasons == "6")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Reason1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Reason1, new SelectList(new[] { null, "Looks mean", "Boring", "Low quality image" }, Model.Reason1))
                        @Html.ValidationMessageFor(model => model.Reason1, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Reason2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Reason2, new SelectList(new[] { null, "Looks mean", "Boring", "Low quality image" }, Model.Reason2))
                            @Html.ValidationMessageFor(model => model.Reason2, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Reason1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Reason1, new SelectList(new[] { null, "Distracting elements", "Bad lighting", "Low quality image" }, Model.Reason1))
                        @Html.ValidationMessageFor(model => model.Reason1, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Reason2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Reason2, new SelectList(new[] { null, "Distracting elements", "Bad lighting", "Low quality image" }, Model.Reason2))
                            @Html.ValidationMessageFor(model => model.Reason2, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
            }
        }

        @{ if (ViewBag.CommentStatus == true)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
